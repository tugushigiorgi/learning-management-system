'use strict';

const SAPPassport = require('@sap/e2e-trace').Passport;
const uuid = require('uuid').v4;
const crypto = require('crypto');

module.exports = {

  NOCACHE_HEADER_VALUE: 'no-cache, no-store, must-revalidate',

  generateNonce:  function () {
    return crypto.randomBytes(16).toString('base64');
  },
  updateSapPassport: function (headers, optTargetHeaders) {
    if (process.env.SERVICE_2_APPROUTER === 'true') {
      return;
    }
    const passportHeader = headers[SAPPassport.HEADER_NAME];
    if (passportHeader) {
      const passport = new SAPPassport(passportHeader);
      passport.update({
        previousComponent: 'XSA Approuter',
        connectionID: '00000000000000000000000000000000',
        connectionCounter: 0
      });
      const headersToUpdate = optTargetHeaders || headers;
      headersToUpdate[SAPPassport.HEADER_NAME] = passport.serialize();
    }
  },
  addCorrelationIdHeader: function (req) {
    if (req.headers['x-correlationid']) {
      return;
    } else if (req.headers['x-correlation-id']) {
      req.headers['x-correlationid'] = req.headers['x-correlation-id'];
      delete req.headers['x-correlation-id'];
    } else if (req.headers['x-request-id']) {
      req.headers['x-correlationid'] = req.headers['x-request-id'];
    } else if (req.headers['x-vcap-request-id']) {
      req.headers['x-correlationid'] = req.headers['x-vcap-request-id'];
    } else {
      req.headers['x-correlationid'] = uuid();
    }
  },
  getCorrelationId: function (req) {
    if (req && req.headers){
      if (!req.headers['x-correlationid']){
        this.addCorrelationIdHeader(req);
      }
      return req.headers['x-correlationid'];
    }
    return uuid();
  }
};
