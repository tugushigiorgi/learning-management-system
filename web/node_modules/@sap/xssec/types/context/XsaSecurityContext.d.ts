export = XsaSecurityContext;
/**
 * @typedef {import("../context/SecurityContext")} SecurityContext
 * @typedef {import("../service/XsaService")} XsaService
 * @typedef {import("../token/XsaToken")} XsaToken
 */
/** @extends {XsuaaSecurityContext} */
declare class XsaSecurityContext extends XsuaaSecurityContext {
    /**
     *
     * @param {XsaService} service
     * @param {XsaToken} token
     * @param {*} contextConfig
     */
    constructor(service: XsaService, token: XsaToken, contextConfig: any);
    /**
     * @deprecated Use the constructor to set the Service instance.
     * @param {XsaService} service
     */
    set service(service: XsaService);
    /**
     * The Service instance on which this SecurityContext has been created.
     * @returns {XsaService} service
     */
    get service(): XsaService;
}
declare namespace XsaSecurityContext {
    export { SecurityContext, XsaService, XsaToken };
}
import XsuaaSecurityContext = require("./XsuaaSecurityContext");
type SecurityContext = import("../context/SecurityContext")<any, any>;
type XsaService = import("../service/XsaService");
type XsaToken = import("../token/XsaToken");
//# sourceMappingURL=XsaSecurityContext.d.ts.map