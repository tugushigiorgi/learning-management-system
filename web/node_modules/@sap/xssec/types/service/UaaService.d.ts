export = UaaService;
/**
 * @typedef {import('../util/Types').ServiceCredentials} ServiceCredentials
 * @typedef {import('../util/Types').UaaServiceCredentials} UaaServiceCredentials
 * @typedef {import('../util/Types').ServiceConfig} ServiceConfig
 * @typedef {import('../util/Types').SecurityContextConfig} SecurityContextConfig
 */
/**
 * New SAP BTP applications should start with SAP Identity Services instead of CF UAA! See README for details.\
 * This {@link Service} class is constructed from CF UAA credentials to provide an API with selected functionality against that UAA service instance, e.g. token validation and token fetches.
 */
declare class UaaService extends XsuaaService {
    /**
     * @param {ServiceCredentials | UaaServiceCredentials} credentials
     * @param {ServiceConfig} [serviceConfig={}]
     */
    constructor(credentials: ServiceCredentials | UaaServiceCredentials, serviceConfig?: ServiceConfig);
}
declare namespace UaaService {
    export { ServiceCredentials, UaaServiceCredentials, ServiceConfig, SecurityContextConfig };
}
import XsuaaService = require("./XsuaaService");
type ServiceCredentials = import("../util/Types").ServiceCredentials;
type UaaServiceCredentials = import("../util/Types").UaaServiceCredentials;
type ServiceConfig = import("../util/Types").ServiceConfig;
type SecurityContextConfig = import("../util/Types").SecurityContextConfig;
//# sourceMappingURL=UaaService.d.ts.map